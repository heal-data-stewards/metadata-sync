/* -------------------------------------------------------------------------------- */
/* Project: HEAL 																	*/
/* PI: Kira Bradford																*/
/* Program: HEAL_97_DQAudit															*/
/* Programmer: Sabrina McCutchan (CDMS)												*/
/* Date Created: 2025/03/27															*/
/* Date Last Updated: 2025/04/25													*/
/* Description:	This program performs a data quality audit checking the completeness*/	
/*	of data about NIH awards related to HEAL studies in the MySQL database.			*/			
/*		1. Create key of appl_ids in MySQL  										*/
/*		2. Query NIH Reporter for all awards sharing a project serial number with 	*/
/*			an award in MySQL 														*/
/*		3. Merge key with NIH Reporter query output									*/
/*		4. Isolate awards we should track that aren't yet in MySQL   				*/
/*		5. Rename vars to same names used in reporter table							*/
/*		6. Format and output table for MySQL										*/
/*		7. Debug: split up large file into 2 for MySQL import						*/
/*																					*/
/* Notes:  																			*/
/*		- See https://docs.google.com/document/d/									*/
/*		  11OOFOEzp_2ZDSM6kXE8G6Lpxs_qTmKDX92F0L5kh9z0/edit?tab=t.0  for a write-up */
/*		  of why and how this DQ audit was performed.								*/
/*																					*/
/* -------------------------------------------------------------------------------- */


clear



/* ----- 1. Create key of appl_ids in MySQL ----- */

use "$temp/nihtables_$today.dta", clear
keep appl_id heal_funded
merge 1:1 appl_id using "$raw/research_networks_$today.dta"
drop if _merge==2
duplicates drop
gen in_resnet=0
replace in_resnet=1 if strtrim(res_net)!=""
keep appl_id heal_funded res_net in_resnet
save "$temp/mysql_applkey.dta", replace



/* ----- 2. Query NIH Reporter for all awards sharing a project serial number with an award in MySQL ----- */
/* Note: This process is done outside of MySQL. The file "$raw/xold/heal_awards_by_serial_number_02142025.csv" (called below) was generated by Maria Davila. She took every unique project serial number that existed in the MySQL reporter and awards tables (these table n's were identical at time of query) and fetched every appl_id associated with those serial numbers from NIH Reporter. */



/* ----- 3. Merge key with NIH Reporter query output ----- */

* Import full list of candidates from NIH Reporter *;
import delim using "$raw/xold/heal_awards_by_serial_number_02142025.csv", delimiters(",") varnames(1) bindquotes(strict) case(preserve) maxquotedrows(30) stringcols(_all) clear
drop heal_funded
save "$raw/xold/heal_awards_by_serial_number_02142025.dta", replace

* Merge NIH Reporter candidates with key of appl's already in MySQL *;
use "$raw/xold/heal_awards_by_serial_number_02142025.dta", clear
sort appl_id
merge 1:1 appl_id using "$temp/mysql_applkey.dta" /* Note: there are 6 appl_ids from MySQL that don't appear in the NIH Reporter extract. These are the 6 known problematic appl_ids that don't have a correctly formatted project number. */
drop if _merge==2

* Gen vars *;
gen in_mysql=0
replace in_mysql=1 if _merge==3
drop _merge

	* Dates *;
	gen bgt_end=budget_end
	foreach var in award_notice_date project_end_date bgt_end {
	gen x`var'=substr(`var',1,10)
	gen `var'_date=date(x`var',"YMD")
	format `var'_date %td
	drop x`var'
	order `var'_date,after(`var')
	label var `var'_date "Stata date format"
	}
	drop bgt_end
	
	destring budget_year_end, replace
	destring fiscal_year, replace
	gen award_year=year(award_notice_date_date)
		order award_year, after(award_notice_date_date)
		replace award_year=fiscal_year if award_year==. /*n=39 changes made*/


/* ----- 4. Isolate awards we should track that aren't yet in MySQL ----- */
		
* Exclude awards issued before the HEAL Initiative started giving awards *;
drop if award_year<2018 /*n=877 deleted*/

* Apply study ID creation rules *;
sort project_serial_num project_num_splitsuffix_code subproject_id
egen xstudy_id=group(project_serial_num project_num_splitsuffix_code subproject_id), missing
order xstudy_id appl_id in_mysql award_year project_serial_num project_num_splitsuffix_code subproject_id

* Drop if awards associated with the study ID are *always* or *never* in MySQL *;
bysort xstudy_id: egen ever_in_mysql=max(in_mysql)
bysort xstudy_id: egen all_in_mysql=min(in_mysql)
drop if ever_in_mysql==0 /*No appl"s associated with the study were in MySQL. n=974 deleted*/
drop if all_in_mysql==1 /*Every possible appl already in MySQL. n=1328 deleted*/
drop ever_in_mysql all_in_mysql

* Exclude all awards for the study predating an award already in MySQL *;
sort xstudy_id in_mysql award_year
by xstudy_id in_mysql: egen xearliest_award_inmysql=min(award_year)
replace xearliest_award_inmysql=. if in_mysql==0
by xstudy_id: egen earliest_award_inmysql=min(xearliest_award_inmysql)
drop if in_mysql==0 & award_year<earliest_award_inmysql /*n=159*/
drop xearliest_award_inmysql earliest_award_inmysql

	tab in_mysql /* 681 appls in MySQL ;  450 not in MySQL */
	tab in_mysql in_resnet, miss

rename xstudy_id study
sort study award_year
save "$temp/appls_related_to_studies.dta", replace
export excel using "$temp/newer_appls_related_to_studies.xlsx", firstrow(variables) replace 



/* ----- 5. Rename vars to same names used in reporter table ----- */

* -- Key of var names -- *;
import excel using "$doc/MySQL Database Tables Data Dictionary_April 2024.xlsx", sheet(reporter) firstrow allstring clear
drop L-AE
split var_note, p(";")
rename var_note2 name
rename var_name newname
replace name=subinstr(name,".","",.)
replace name=substr(name,1,32)
keep newname name
drop if newname==name
drop if name==""
/*
	replace name="full_study_sectionsra_designator" if name==" full_study_sectionsra_designator_code"
	replace name="" if name=="principal_investigatorsfirst_name"
	replace name="" if name==""
	replace name="" if name==""
	replace name="" if name==""
*/
save "$doc/varlist_key_matched.dta", replace


* -- Rename vars-- *;
use "$doc/varlist_key_matched.dta", clear
keep name newname	
/*drop if dropvar==1*/
count
local nobs = r(N)
forvalues i = 1/`nobs' {
    local name`i' = name[`i']
	local newname`i' = newname[`i']
	}
	
use "$temp/appls_related_to_studies.dta", clear
forvalues i = 1/`nobs' {
    rename `name`i'' `newname`i''
	}
	save "$temp/appls_related_to_studies_renamed.dta", replace



/* ----- 6. Format and output table for MySQL ----- */
use "$temp/appls_related_to_studies_renamed.dta", clear

* Drop records already in mysql *;
drop if in_mysql==1

drop study award_year in_mysql heal_funded res_net in_resnet data_check project_start_year organizationorg_ueis organizationprimary_duns organizationprimary_uei opportunity_number 

order appl_id, after(fund_ic_tot_cst)
order proj_ser_num, after(proj_nm_spl_yr)
order proj_num_spl_sfx_code, after(proj_ser_nm_spl)
order subproj_id, after(spd_cat_0)

save "$der/reporter_dqaudit.dta", replace


drop bgt_end_date award_notice_date_date project_end_date_date budget_year_end budget_year_start date_added project_end_year
export delimited using "$der/reporter_dqaudit.csv", nolab /*quote */replace
export excel using "$der/reporter_dqaudit.xlsx", firstrow(var) nolabel replace





/* ----- 7. Debug: split up large file into 2 for MySQL import ----- */
use "$der/reporter_dqaudit.dta", clear
drop bgt_end_date award_notice_date_date project_end_date_date budget_year_end budget_year_start date_added project_end_year
gen row=_n
save "$temp/splits.dta", replace

keep if row<=225
drop row
save "$der/reporter_dqaudit_pt1.dta", replace
export delimited using "$der/reporter_dqaudit_pt1.csv", nolab quote replace

use "$temp/splits.dta", clear
keep if row>225
drop row
save "$der/reporter_dqaudit_pt2.dta", replace
export delimited using "$der/reporter_dqaudit_pt2.csv", nolab quote replace